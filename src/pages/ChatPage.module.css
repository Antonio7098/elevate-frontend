/*
 * ChatPage.module.css
 * Styles for a modern, Claude-inspired chat interface.
 */

.chatPage {
  display: flex;
  flex-direction: column;
  height: calc(100vh - 5rem); /* Adjust based on your app's header/nav height */
  background-color: var(--color-background);
  color: var(--color-text-base);
  font-family: var(--font-family-sans);
}

.chatContainer {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  max-width: 800px;
  width: 100%;
  margin: 0 auto;
  padding: 0 1rem;
}

.messages {
  flex-grow: 1;
  overflow-y: auto;
  padding: 1.5rem 0;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

/* Welcome message / Empty state */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  height: 100%;
  color: var(--color-text-muted);
}

.emptyState h1 {
  font-size: 2rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.emptyState p {
  font-size: 1rem;
}


/* Individual message styling */
.messageWrapper {
  display: flex;
  flex-direction: column;
  max-width: 90%;
}

.messageWrapper.user {
  align-self: flex-end;
  align-items: flex-end;
}

.messageWrapper.ai {
  align-self: flex-start;
  align-items: flex-start;
}

.messageSender {
    font-weight: 600;
    font-size: 0.9rem;
    margin-bottom: 0.25rem;
    color: var(--color-text-base);
}

.message {
  padding: 0.75rem 1.25rem;
  border-radius: 1.25rem;
  line-height: 1.6;
  font-size: 1rem;
  word-break: break-word;
}

.message.user {
  background-color: var(--color-primary-lightest);
  color: var(--color-text-base);
  border-bottom-right-radius: 0.25rem;
}

.message.ai {
  background-color: var(--color-surface);
  border: 1px solid var(--color-border);
  border-bottom-left-radius: 0.25rem;
}

.message p {
    margin: 0;
}

.messageTimestamp {
  font-size: 0.75rem;
  color: var(--color-text-muted);
  margin-top: 0.5rem;
  padding: 0 0.5rem;
}

/* Input area styling */
.inputArea {
  padding: 1rem 0 2rem 0;
  background-color: var(--color-background);
  width: 100%;
}

.inputForm {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  gap: 0.5rem;
}

/* A dedicated wrapper for the chat input component to control layout */
.chatInputWrapper {
  width: 100%;
  position: relative;
}

/*
  Use scoped global selectors to override the library's internal styles.
  This targets the visible input area and the textarea inside it.
*/
.mentionsInput {
  width: 100%;
  position: relative;
}

.suggestion {
  padding: 10px 15px;
  cursor: pointer;
  display: flex;
  align-items: center;
}

.suggestion {
  padding: 10px 15px;
  cursor: pointer;
  display: flex;
  align-items: center;
}

.suggestion.focused {
  background-color: var(--color-surface-hover);
}

.suggestionType {
  margin-right: 10px;
  padding: 2px 6px;
  border-radius: 4px;
  font-size: 0.8rem;
  font-weight: bold;
  color: #fff;
  background-color: #ccc; /* Default color */
}

.suggestionType[data-type="folder"] {
  background-color: #007bff; /* Blue for folders */
}

.suggestionType[data-type="questionSet"] {
  background-color: #28a745; /* Green for question sets */
}

.suggestionType[data-type="note"] {
  background-color: #ffc107; /* Yellow for notes */
}

.mention {
  background-color: var(--color-primary-lightest);
  color: var(--color-primary);
  padding: 2px 4px;
  border-radius: 4px;
}

.sendButton {
  position: absolute;
  right: 0.5rem;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  border: none;
  background-color: var(--color-primary);
  color: white;
  cursor: pointer;
  transition: background-color 0.2s;
  flex-shrink: 0;
}

.sendButton:hover:not(:disabled) {
  background-color: var(--color-primary-hover);
}

.sendButton:disabled {
  background-color: var(--color-primary-disabled);
  cursor: not-allowed;
}

/* Ensure the input container takes full width */
.mentions > div {
  width: 100%;
  position: relative;
}

.loadingSpinner {
  height: 1.25rem;
  width: 1.25rem;
  border: 2px solid white;
  border-top-color: transparent;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Context Selectors */
.contextHeader {
  padding: 1rem 0;
  border-bottom: 1px solid var(--color-border);
  margin-bottom: 1rem;
}

.contextSelectors {
    display: flex;
    gap: 1rem;
    align-items: center;
}

.contextSelector {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    position: relative;
}

.contextSelector select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 0.5rem;
    padding: 0.5rem 2rem 0.5rem 0.75rem;
    font-size: 0.9rem;
    cursor: pointer;
    color: var(--color-text-muted);
}

.contextSelector select:disabled {
    background-color: var(--color-background);
    cursor: not-allowed;
}

.contextSelector::after {
    content: 'â–¼';
    font-size: 0.6rem;
    color: var(--color-text-muted);
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
}

.contextIcon {
    color: var(--color-text-muted);
}

.loadingIcon {
    animation: spin 1s linear infinite;
}

/* System message styles */
.messageWrapper.system {
  align-self: center;
  max-width: 100%;
  margin: 8px 0;
}

.message.system {
  background-color: var(--color-surface-hover);
  color: var(--color-text-muted);
  font-style: italic;
  border-radius: 12px;
  padding: 8px 16px;
  font-size: 0.9rem;
  text-align: center;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}
